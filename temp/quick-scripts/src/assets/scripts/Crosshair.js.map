{"version":3,"sources":["assets\\scripts\\Crosshair.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAwC,8BAAY;IAApD;;IAuCA,CAAC;IArCG,qFAAqF;IAC9E,yBAAI,GAAX,UAAY,IAAa;QAErB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,oEAAoE;IAC5D,+BAAU,GAAlB,UAAmB,IAAa;QAE5B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,oFAAoF;QAEpH,IAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAClB;YACI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAElC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SACxB;aAED;YACI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAEnC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SACzB;QAED,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnE,CAAC;IAED,4CAA4C;IACpC,kCAAa,GAArB,UAAsB,KAAK;QAEvB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,iCAAY,GAAZ;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAtCgB,UAAU;QAD9B,OAAO;OACa,UAAU,CAuC9B;IAAD,iBAAC;CAvCD,AAuCC,CAvCuC,EAAE,CAAC,SAAS,GAuCnD;kBAvCoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Crosshair1 extends cc.Component \r\n{\r\n    // when created, the bullet need to be placed at correct position and play animation.\r\n    public init(node: cc.Node) \r\n    {\r\n        console.log(\"aaa\")\r\n        this.setInitPos(node);\r\n    }\r\n\r\n    //this function sets the arrow's initial position when it is reused.\r\n    private setInitPos(node: cc.Node)\r\n    {\r\n        this.node.parent = node.parent; // don't mount under the player, otherwise it will change direction when player move\r\n\r\n        if(node.scaleX > 0)\r\n        {\r\n            this.node.position = cc.v3(35, 8);\r\n\r\n            this.node.scaleX = 1;\r\n        }\r\n        else\r\n        {\r\n            this.node.position = cc.v3(-35, 8);\r\n\r\n            this.node.scaleX = -1;\r\n        }\r\n\r\n        this.node.position = this.node.position.addSelf(node.position);\r\n    }\r\n\r\n    //make the arrow move according to the angle\r\n    private crosshairMove(angle)\r\n    {\r\n        this.node.angle = angle;\r\n    }\r\n\r\n    destroyArrow() {\r\n        this.node.destroy();\r\n    }\r\n}\r\n"]}