{"version":3,"sources":["assets\\scripts\\Bomb.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import GameManager from \"./GameManager\"\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Bomb extends cc.Component \r\n{\r\n    @property(GameManager)\r\n    gameManager: GameManager = null;\r\n\r\n    private bombManager = null;\r\n\r\n    public isTriggered = false; // I add this to make the bullet kill one enemy at a time.\r\n\r\n    private rigidBody: cc.RigidBody = null;\r\n\r\n    private shootAngle = null;\r\n\r\n    private animation: cc.Animation = null;\r\n\r\n    // when created, the bullet need to be placed at correct position and play animation.\r\n    public init(node: cc.Node) \r\n    {\r\n        this.animation = this.getComponent(cc.Animation);\r\n        this.rigidBody = this.getComponent(cc.RigidBody);\r\n        this.setInitPos(node);\r\n\r\n        this.animation.play('grenade');\r\n        this.bulletMove();\r\n    }\r\n\r\n    // this function is called when the bullet manager calls \"get\" API.\r\n    reuse(bulletManager)\r\n    {\r\n        this.bombManager = bulletManager;\r\n\r\n        this.isTriggered = false;\r\n    }\r\n\r\n    //this function sets the bullet's initial position when it is reused.\r\n    private setInitPos(node: cc.Node)\r\n    {\r\n        this.node.parent = node.parent; // don't mount under the player, otherwise it will change direction when player move\r\n\r\n        if(node.scaleX > 0)\r\n        {\r\n            this.node.position = cc.v3(35, 8);\r\n\r\n            this.node.scaleX = 1;\r\n        }\r\n        else\r\n        {\r\n            this.node.position = cc.v3(-35, 8);\r\n\r\n            this.node.scaleX = -1;\r\n        }\r\n\r\n        this.node.position = this.node.position.addSelf(node.position);\r\n    }\r\n\r\n    //make the bullet move from current position\r\n    private bulletMove()\r\n    {\r\n        let moveDir = null;\r\n        // decide bullet direction\r\n        if(this.node.scaleX >= 0) {\r\n            moveDir = 1;\r\n        } else {\r\n            moveDir = -1;\r\n        }\r\n        let speed = 1000;\r\n        // this.rigidBody.applyForceToCenter(cc.v2(Math.sin(shootAngle) * x, Math.cos(shootAngle) * x), true);\r\n        // this.rigidBody.linearVelocity = cc.v2(Math.sin(this.shootAngle) * x * moveDir, Math.cos(this.shootAngle) * x);\r\n        // this.rigidBody.linearVelocity = cc.v2(speed * moveDir * Math.sin(this.shootAngle), Math.sinh(this.shootAngle) * speed);\r\n        this.rigidBody.linearVelocity = cc.v2(speed * moveDir * Math.cos(this.shootAngle), Math.sin(this.shootAngle) * speed);\r\n        this.rigidBody.angularVelocity = 200 * moveDir;\r\n\r\n\r\n    }\r\n    \r\n    //detect collision\r\n    onBeginContact(contact, selfCollider, otherCollider) {\r\n        this.scheduleOnce(() => {\r\n            this.node.stopAllActions();\r\n            this.unscheduleAllCallbacks();\r\n            this.animation.stop();\r\n            this.bombManager.put(this.node);\r\n        }, 0.07);\r\n    }\r\n\r\n    setAngle(angle) {\r\n        this.shootAngle = angle;\r\n    }\r\n}\r\n"]}